[2024-01-04 16:07:54,965] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-04 16:07:54,999] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-04 16:07:55,002] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-01-04 16:07:55,039] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-04 16:07:55,043] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-04 16:07:55,047] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-04 16:07:55,049] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-04 16:07:55,061] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2024-01-04 16:07:55,067] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-04 16:07:55,072] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-04 16:07:55,085] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-04 16:07:55,085] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 16:07:55,085] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 16:07:55,085] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-04 16:07:55,087] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-04 16:07:55,089] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-04 16:07:55,089] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-04 16:07:55,089] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-04 16:07:55,089] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-01-04 16:07:55,090] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-04 16:07:55,100] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:07:55,100] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:07:55,104] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:07:55,104] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:07:55,105] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 16:07:55,105] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 16:07:55,107] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 16:07:55,107] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-04 16:07:55,113] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 16:07:55,114] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 16:07:55,115] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-04 16:07:55,115] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-04 16:07:55,118] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-04 16:07:55,138] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-04 16:07:55,612] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 16:08:00,147] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 16:08:00,148] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 16:09:29,608] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-04 16:09:29,635] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-01-04 16:09:29,635] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-04 16:09:29,649] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-04 16:09:29,652] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-04 16:09:29,652] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-04 16:09:29,660] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 46) (kafka.controller.KafkaController)
[2024-01-04 16:09:29,676] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-04 16:09:29,679] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-04 16:09:29,686] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-04 16:09:29,686] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-04 16:09:29,686] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 16:09:29,686] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 16:09:29,686] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-04 16:09:29,686] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-04 16:09:29,686] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-04 16:09:29,686] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-04 16:09:29,686] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-01-04 16:09:29,702] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-04 16:09:29,708] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:09:29,708] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:09:29,708] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:09:29,708] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 16:09:29,708] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 16:09:29,708] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 16:09:29,721] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 16:09:29,721] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-01-04 16:09:29,728] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 16:09:29,728] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 16:09:29,728] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-04 16:09:29,728] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-04 16:09:29,728] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-04 16:09:29,744] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-04 16:09:30,221] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 16:09:34,754] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 16:09:34,754] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 18:55:20,831] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-04 18:55:20,858] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2024-01-04 18:55:20,860] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-04 18:55:20,865] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-04 18:55:20,868] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-04 18:55:20,870] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-04 18:55:20,890] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 65) (kafka.controller.KafkaController)
[2024-01-04 18:55:20,896] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-04 18:55:20,901] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-04 18:55:20,908] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-04 18:55:20,909] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-04 18:55:20,909] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 18:55:20,910] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 18:55:20,910] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-04 18:55:20,913] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-04 18:55:20,913] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-04 18:55:20,913] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-04 18:55:20,913] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-01-04 18:55:20,922] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-04 18:55:20,932] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 18:55:20,933] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 18:55:20,936] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 18:55:20,936] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 18:55:20,936] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 18:55:20,937] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 18:55:20,942] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 18:55:20,942] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2024-01-04 18:55:20,947] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 18:55:20,948] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 18:55:20,948] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-04 18:55:20,948] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-04 18:55:20,949] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-04 18:55:20,967] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-04 18:55:21,442] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 18:55:25,984] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 18:55:25,984] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 19:02:56,057] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-04 19:02:56,083] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2024-01-04 19:02:56,087] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-04 19:02:56,090] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-04 19:02:56,094] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-04 19:02:56,097] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-04 19:02:56,112] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 84) (kafka.controller.KafkaController)
[2024-01-04 19:02:56,117] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-04 19:02:56,121] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-04 19:02:56,127] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-04 19:02:56,128] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-04 19:02:56,128] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 19:02:56,129] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 19:02:56,129] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-04 19:02:56,131] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-04 19:02:56,131] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-04 19:02:56,131] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-04 19:02:56,132] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-01-04 19:02:56,132] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-04 19:02:56,141] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:02:56,142] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:02:56,150] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:02:56,150] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:02:56,151] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 19:02:56,151] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 19:02:56,155] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 19:02:56,156] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2024-01-04 19:02:56,161] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 19:02:56,161] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 19:02:56,161] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-04 19:02:56,161] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-04 19:02:56,162] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-04 19:02:56,176] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-04 19:02:56,659] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 19:03:01,185] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 19:03:01,186] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 19:04:16,768] INFO [Controller id=0] New topics: [Set(ccd_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(ccd_topic,Some(uU-om-D_TrKAdFcRwM62lw),Map(ccd_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-01-04 19:04:16,774] INFO [Controller id=0] New partition creation callback for ccd_topic-0 (kafka.controller.KafkaController)
[2024-01-04 19:08:01,206] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 19:08:01,206] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 19:08:01,209] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 19:08:01,211] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 19:13:01,211] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 19:13:01,211] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 19:13:01,211] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 19:13:01,211] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 19:18:01,211] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 19:18:01,211] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 19:18:01,211] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 19:18:01,211] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 19:20:57,403] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-04 19:20:57,426] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2024-01-04 19:20:57,428] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-04 19:20:57,433] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-04 19:20:57,436] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-04 19:20:57,440] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-04 19:20:57,456] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 109) (kafka.controller.KafkaController)
[2024-01-04 19:20:57,469] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-04 19:20:57,483] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-04 19:20:57,493] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-04 19:20:57,494] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-04 19:20:57,494] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 19:20:57,494] INFO [Controller id=0] Current list of topics in the cluster: HashSet(ccd_topic) (kafka.controller.KafkaController)
[2024-01-04 19:20:57,495] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-04 19:20:57,498] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-04 19:20:57,499] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-04 19:20:57,499] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-04 19:20:57,500] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-01-04 19:20:57,501] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-04 19:20:57,515] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:20:57,523] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:20:57,546] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:20:57,547] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=ccd_topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 19:20:57,547] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 19:20:57,553] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 19:20:57,556] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(ccd_topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 19:20:57,556] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2024-01-04 19:20:57,562] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 19:20:57,563] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 19:20:57,563] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-04 19:20:57,563] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-04 19:20:57,564] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-04 19:20:57,585] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-04 19:20:58,031] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 19:21:02,588] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 19:21:02,588] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 19:21:02,590] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 19:21:02,591] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:03:23,633] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-04 20:03:23,655] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2024-01-04 20:03:23,658] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-04 20:03:23,662] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-04 20:03:23,665] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-04 20:03:23,667] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-04 20:03:23,680] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 128) (kafka.controller.KafkaController)
[2024-01-04 20:03:23,694] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-04 20:03:23,703] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-04 20:03:23,711] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-04 20:03:23,712] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-04 20:03:23,712] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 20:03:23,713] INFO [Controller id=0] Current list of topics in the cluster: HashSet(ccd_topic) (kafka.controller.KafkaController)
[2024-01-04 20:03:23,713] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-04 20:03:23,717] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-04 20:03:23,718] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-04 20:03:23,718] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-04 20:03:23,718] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-01-04 20:03:23,719] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-04 20:03:23,732] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:03:23,742] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:03:23,762] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:03:23,762] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=ccd_topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:03:23,762] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 20:03:23,764] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 20:03:23,765] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(ccd_topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 20:03:23,765] INFO [Controller id=0] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2024-01-04 20:03:23,769] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 20:03:23,769] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 20:03:23,770] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-04 20:03:23,770] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-04 20:03:23,771] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-04 20:03:23,786] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-04 20:03:24,247] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 20:03:28,801] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:03:28,801] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:03:28,803] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 20:03:28,804] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:08:28,809] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:08:28,809] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:08:28,809] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 20:08:28,809] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:13:28,807] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:13:28,807] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:13:28,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 20:13:28,808] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:14:49,078] INFO [Controller id=0] New topics: [Set(ashokit_order_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(ashokit_order_topic,Some(5Q4N7hzzQlm7qY9PXHYY9w),Map(ashokit_order_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-01-04 20:14:49,079] INFO [Controller id=0] New partition creation callback for ashokit_order_topic-0 (kafka.controller.KafkaController)
[2024-01-04 20:14:49,114] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 20:14:49,114] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-01-04 20:14:49,121] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-01-04 20:18:28,818] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:18:28,818] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:18:28,819] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 20:18:28,819] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:23:28,830] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:23:28,830] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:23:28,830] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 20:23:28,830] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:28:28,841] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:28:28,841] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:28:28,842] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-01-04 20:28:28,842] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:30:58,087] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(D-YLpxx6QqGGobh2LTICFA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-01-04 20:30:58,087] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-01-04 20:30:58,193] INFO [RequestSendThread controllerId=0] Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 20:33:28,852] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:33:28,852] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:33:28,853] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-01-04 20:33:28,853] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:38:07,783] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-04 20:38:07,825] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2024-01-04 20:38:07,828] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-04 20:38:07,838] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-04 20:38:07,842] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-04 20:38:07,847] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-04 20:38:07,877] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 258) (kafka.controller.KafkaController)
[2024-01-04 20:38:07,895] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-04 20:38:07,944] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-04 20:38:07,955] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-04 20:38:07,956] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-04 20:38:07,957] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-04 20:38:07,957] INFO [Controller id=0] Current list of topics in the cluster: HashSet(ashokit_order_topic, ccd_topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-01-04 20:38:07,957] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-04 20:38:07,962] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-04 20:38:07,963] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-04 20:38:07,963] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-04 20:38:07,963] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-01-04 20:38:07,965] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-04 20:38:07,981] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:38:07,995] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:38:08,037] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:38:08,038] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=ccd_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=ashokit_order_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-01-04 20:38:08,039] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 20:38:08,055] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 20:38:08,057] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, ashokit_order_topic-0 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, ccd_topic-0 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-01-04 20:38:08,057] INFO [Controller id=0] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2024-01-04 20:38:08,083] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 20:38:08,083] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-04 20:38:08,084] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-04 20:38:08,085] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-04 20:38:08,087] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-04 20:38:08,115] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-04 20:38:08,490] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-3HSOOHMD:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-04 20:38:13,130] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:38:13,130] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:38:13,137] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-01-04 20:38:13,139] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-01-04 20:38:51,868] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2024-01-04 20:38:51,886] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2024-01-04 20:43:13,147] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-04 20:43:13,147] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-04 20:43:13,149] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-01-04 20:43:13,149] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
